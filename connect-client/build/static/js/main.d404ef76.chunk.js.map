{"version":3,"sources":["validation/is-empty.js","actions/type.js","reducer/authReducer.js","reducer/errorReducer.js","reducer/index.js","store/index.js","utils/setAuthToken.js","actions/authAction.js","comopnent/login.js","comopnent/register.js","comopnent/landingPage.js","utils/privateRoute.js","App.js","serviceWorker.js","index.js"],"names":["isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","combineReducers","auth","state","action","type","objectSpread","payload","errors","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","clearError","WrappedNormalLoginForm","Form","create","name","React","Component","[object Object]","args","super","this","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","loginUser","changeRoute","history","push","componentDidMount","componentWillReceiveProps","nextProps","setState","render","getFieldDecorator","react_default","a","createElement","className","__source","fileName","_jsxFileName","lineNumber","__self","es_form","onSubmit","Item","rules","required","message","input","prefix","icon","style","color","placeholder","padding","error","es_button","htmlType","react_router_dom","to","connect","userData","post","then","res","data","setItem","jwt_decode","catch","response","withRouter","register","register_jsxFileName","LandingPage","landingPage_jsxFileName","shape","size","onClick","propTypes","prop","PropTypes","PrivateRoute","_ref","component","rest","objectWithoutProperties","react_router","assign","privateRoute_jsxFileName","object","isRequired","jwtToken","currentTime","Date","now","exp","location","href","App","es","App_jsxFileName","privateRoute","exact","path","Login","Register","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d404ef76.chunk.js","sourcesContent":["const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\n  (typeof value === \"string\" && value.trim().length === 0);\n\nexport default isEmpty;\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const CLEAR_CURRENT_PROJECT = \"CLEAR_CURRENT_PROJECT\";\r\n\r\nexport const PROJECT_LOADING = \"POST_LOADING\";\r\nexport const GET_PROJECTS = \"GET_POSTS\";\r\nexport const GET_PROJECT = \"GET_POST\";\r\nexport const ADD_PROJECT = \"ADD_POST\";\r\nexport const DELETE_PROJECT = \"DELETE_POST\";\r\nexport const GET_PERSONS = \"GET_PERSONS\";\r\nexport const PERSONS_LOADING = \"PERSONS_LOADING\";\r\nexport const DELETE_PERSONS = \"DELETE_PERSONS\";\r\n","import isEmpty from \"../validation/is-empty\";\r\n\r\nimport { SET_CURRENT_USER } from \"../actions/type\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/type\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    case CLEAR_ERRORS:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER, CLEAR_ERRORS } from \"./type\";\r\n\r\n// Login - Get User Token\r\nexport const loginUser = (userData, action) => dispatch => {\r\n  dispatch(clearError());\r\n  axios\r\n    .post(\"/api/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      const { token } = res.data;\r\n      // Set token to ls\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n\r\n      action();\r\n      dispatch(clearError());\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response ? err.response.data : err.message\r\n      })\r\n    );\r\n};\r\n\r\nexport const register = (userData, action) => dispatch => {\r\n  dispatch(clearError());\r\n  axios\r\n    .post(\"/api/user\", userData)\r\n    .then(res => {\r\n      action();\r\n      dispatch(clearError());\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response ? err.response.data : err.message\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from localStorage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n\r\nconst clearError = () => {\r\n  return {\r\n    type: CLEAR_ERRORS\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\nimport { loginUser } from \"../actions/authAction\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport isEmpty from \"../validation/is-empty\";\r\nclass NormalLoginForm extends React.Component {\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/landing-page\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/landing-page\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n      }\r\n      this.props.loginUser(values, this.changeRoute);\r\n    });\r\n  };\r\n  changeRoute = () => {\r\n    this.props.history.push(\"/landing-page\");\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <div className=\"login-comoponent\">\r\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n          <Form.Item>\r\n            {getFieldDecorator(\"username\", {\r\n              rules: [\r\n                { required: true, message: \"Please input your username!\" }\r\n              ]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                placeholder=\"Username\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"password\", {\r\n              rules: [\r\n                { required: true, message: \"Please input your Password!\" }\r\n              ]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <div style={{ color: \"red\", padding: 15 }}>\r\n            {\" \"}\r\n            {this.props.errors\r\n              ? this.props.errors.error\r\n                ? this.props.errors.error.message\r\n                : isEmpty(this.props.errors)\r\n                ? null\r\n                : \"invalid password\"\r\n              : null}\r\n          </div>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n            Or <Link to=\"/register\">register now!</Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(\r\n  NormalLoginForm\r\n);\r\nconst mapStateToProps = state => ({ errors: state.errors, auth: state.auth });\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(withRouter(WrappedNormalLoginForm));\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\nimport { register } from \"../actions/authAction\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport isEmpty from \"../validation/is-empty\";\r\nclass NormalLoginForm extends React.Component {\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/landing-page\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/landing-page\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n      }\r\n      this.props.register(values, this.changeRoute);\r\n    });\r\n  };\r\n  changeRoute = () => {\r\n    this.props.history.push(\"/login\");\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <div className=\"login-comoponent\">\r\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n          <Form.Item>\r\n            {getFieldDecorator(\"username\", {\r\n              rules: [\r\n                { required: true, message: \"Please input your username!\" }\r\n              ]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                placeholder=\"Username\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"email\", {\r\n              rules: [{ required: true, message: \"Please input your email!\" }]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"email\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                placeholder=\"email\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"password\", {\r\n              rules: [\r\n                { required: true, message: \"Please input your Password!\" }\r\n              ]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <div style={{ color: \"red\", padding: 15 }}>\r\n            {\" \"}\r\n            {this.props.errors\r\n              ? this.props.errors.error\r\n                ? this.props.errors.error.message\r\n                : isEmpty(this.props.errors)\r\n                ? null\r\n                : \"invalid password\"\r\n              : null}\r\n          </div>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n            Or <Link to=\"/register\">register now!</Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(\r\n  NormalLoginForm\r\n);\r\nconst mapStateToProps = state => ({ errors: state.errors, auth: state.auth });\r\nexport default connect(\r\n  mapStateToProps,\r\n  { register }\r\n)(withRouter(WrappedNormalLoginForm));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Icon } from \"antd\";\r\nimport { logoutUser } from \"../actions/authAction\";\r\nexport class LandingPage extends Component {\r\n  static propTypes = {\r\n    prop: PropTypes\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"logout-button\">\r\n          <div className=\"logout-button\">\r\n            logout\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"circle\"\r\n              size={35}\r\n              onClick={this.props.logoutUser}\r\n            >\r\n              <Icon type=\"logout\" />\r\n            </Button>\r\n          </div>\r\n        </header>\r\n        <h1> New Landing page</h1>\r\n        <h2> walidouuu </h2>\r\n        <h3>ssss</h3>\r\n\r\n        <h2>i make it</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(LandingPage);\r\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Login from \"./comopnent/login\";\nimport Register from \"./comopnent/register\";\n\nimport LandingPage from \"./comopnent/landingPage\";\nimport PrivateRoute from \"./utils/privateRoute\";\n\n/** */\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authAction\";\n\n// Check for token\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n\n  const currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"/\";\n  }\n}\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Switch>\n          <PrivateRoute exact path=\"/landing-page\" component={LandingPage} />\n        </Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/Register\" component={Register} />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}